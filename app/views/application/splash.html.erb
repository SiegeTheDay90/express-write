<%= javascript_import_module_tag 'splashcounter' if Rails.env.production? %>
<%= javascript_import_module_tag 'gsap' %>
<script>

    function updateForm(){
        const form = document.getElementById("express-form");
        const uploadType = form.dataset.upload;
        const format = form.dataset.format;
        const input = document.getElementById("resume-input");

        switch(format){
            case "PDF":
                input.innerHTML = `<div id="upload-type" class="w-100 d-flex py-1 mb-1" onChange="uploadChange(event)">
                                        From:&nbsp; 
                                        <label>File <input type="radio" name="form-type" value="File" ${uploadType === "File" ? "checked" : ""}></label>
                                        <label class="ms-2">Link <input type="radio" name="form-type" value="Link" ${uploadType !== "File" ? "checked" : ""}></label>
                                    </div>`
                                    
                if(uploadType === "File"){
                    input.innerHTML += `<input type="file" name="file" id="file" accept=".pdf" class="mb-3" required>`
                } else {
                    input.innerHTML += `<input placeholder="Link" name="link" id="link-to-file" class="form-control mb-3" required>`
                }
            break;

            case "DOCX":
                input.innerHTML = `<div id="upload-type" class="w-100 d-flex py-1 mb-1" onChange="uploadChange(event)">
                                        From:&nbsp; 
                                        <label>File <input type="radio" name="form-type" value="File" ${uploadType === "File" ? "checked" : ""}></label>
                                        <label class="ms-2">Link <input type="radio" name="form-type" value="Link" ${uploadType !== "File" ? "checked" : ""}></label>
                                    </div>`
                                    
                if(uploadType === "File"){
                    input.innerHTML += `<input type="file" name="file" id="file" accept=".doc, .docx" class="mb-3" required>`
                } else {
                    input.innerHTML += `<input placeholder="Link" name="link" id="link-to-file" class="form-control mb-3" required>`
                }
            break;

            case "TEXT":
                input.innerHTML = `<div class="mb-3 form-floating w-100">
                    <input name="text" id="link-to-file" class="pt-5 pb-3 form-control w-100" required>
                    <label class="fs-5 fw-bolder" for="link-to-file">Paste Here</label>
                </div>`
            break;
            default:
                console.error("Could not update form");
        }

    }

    function uploadChange(e){
        const value = e.target.value;
        const form = e.currentTarget.parentElement.parentElement;
        form.dataset.upload = value;
        updateForm();
    }

    function formatChange(e){
        const value = e.target.value;
        const form = e.target.parentElement.parentElement;
        form.dataset.format = value;
        updateForm();
    }

    function promptChange(e){
        const length = e.target.value.length;
        const counter = e.target.parentElement.querySelector("textarea + .char-counter");
        counter.innerText = `${length}/250`;
    }

    async function isValidURL(url) {
        // Regular expression pattern to match URLs
        const urlPattern = /(https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|www\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9]+\.[^\s]{2,}|www\.[a-zA-Z0-9]+\.[^\s]{2,})/;
        if(!urlPattern.test(url)){
        return false;
        }
        try{
        await fetch(url, {mode: 'no-cors'});
        return true;
        } catch {
        return false;
        }
    }

    async function checkValidSite(input, button){
      let url = input.value;
      input.disabled = true;
      const loadingImage = new Image();
      loadingImage.src = ["https://cl-helper-development.s3.amazonaws.com/loading-box.gif", "https://cl-helper-development.s3.amazonaws.com/loading-ball.gif"][Math.floor(Math.random()*2)]
      loadingImage.id = "loading-gif"
      button.parentElement.appendChild(loadingImage);
      const statusDiv = document.getElementById('status');
      if(url.slice(0,4).toLowerCase() !== "http"){
        url = "https://" + url;
      }
      if(!(await isValidURL(url))){
        statusDiv.classList.add('text-danger');
        statusDiv.classList.remove('text-sucess');
        statusDiv.innerHTML = `❌ Not a valid URL`;
      } else {
        const params = new URLSearchParams(`url=${url}`)
        const response = await fetch(`/url-check/?${params.toString()}`);
        const {ok, status} = await response.json();
    
        if(ok === true){
          button.disabled = false;
          statusDiv.innerHTML = `✅`;
          statusDiv.classList.add('text-success');
          statusDiv.classList.remove('text-danger');
        } else {
          button.disabled = true;
          statusDiv.classList.remove('text-sucess');
          statusDiv.classList.add('text-danger');
          statusDiv.innerHTML = `❌ ${status}`;
        }
      }
      input.disabled = false;
      loadingImage.remove();
      input.focus();
    } 

    function listingInputChange(e=event){
        if(localStorage.getItem('debounce')){
            clearTimeout(localStorage.getItem('debounce'));
        }
        const type = Array.from(document.getElementsByClassName("listing-type")).filter(radio => radio.checked)[0].value;
        const input = document.getElementById("link-to-listing");
        const submit = document.getElementById("express-submit");
        submit.disabled = true;


        if(input.value === "") return;

        if(e.target.type === "radio"){
            input.value = "";
        } else {
            if(type === 'url'){
                const debounce = setTimeout(() => {
                    checkValidSite(input, submit);
                }, 700);
            
                localStorage.setItem('debounce', debounce);
        
            } else {
                if(e.target.value.trim()){
                    submit.disabled = false;
                } else {
                    submit.disabled = true;
                }
            }
        }
    }

</script>

<div id="splash" style="backgrond-color: transparent" class="text-center px-4 w-100">
    <span id="splash-logo">
        <span><img id="logo-img" class="splash" src="https://cl-helper-development.s3.amazonaws.com/logo_white.png" alt="Logo">
            <span id="logo-text">ExpressWrite</span>
        </span>
    </span>
</div>


<div style="background-color: #eef" class="px-4 py-5 mb-5 text-center" id="t-height">
    <h2 class="display-5 fw-bold mb-1 text-body-emphasis">Express Write</h2>
    <small>Get a cover letter now, no account needed.</small><br/>
    <div class="d-flex justify-content-center">
        <div class="col-lg-2 d-flex flex-column align-items-start ps-5">
            <h3>How it works:</h3>
            <ul id="express-write-instructions" class="d-flex flex-column align-items-start ps-0">
                <li id="resume-instruction" class="express-instruction"> Share your Resume</li>
                <li id="listing-instruction" class="express-instruction"> Share a Job Listing</li>
                <li id="letter-instruction" class="express-instruction"> Generate a Cover Letter</li>
                <li id="edit-instruction" class="express-instruction"> Make it your own!</li>
            </ul>
        </div>
        <div class="col-lg-4 px-5">
            <div class="gap-2 d-flex flex-column align-items-center w-100">
                <form id="express-form" data-action="express#generate" data-upload="File" data-format="PDF" method="POST" action=<%= express_letter_url %> class="mb-3 ajaxForm d-flex flex-column align-items-start col-12">
                    <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
                    <h6 class="my-1">Upload your Resume</h6>
                    <label for="resume-format">Format:
                    <select class="mb-1" name="resume-format" id="resume-format" onChange="formatChange(event)">
                        <option value="PDF" selected>PDF</option>
                        <option value="DOCX">DOCX</option>
                        <option value="TEXT">Plain Text</option>
                    </select></label>
                    

                    <div id="resume-input" class="w-100 mb-2">
                        <div id="upload-type" class="d-flex py-1 mb-1" onChange="uploadChange(event)">
                            From:&nbsp;
                            <label>File <input type="radio" name="form-type" value="File" checked></label>
                            <label class="ms-2">Link <input type="radio" name="form-type" value="Link"></label>
                        </div>
                        <input type="file" name="file" id="file" accept=".pdf" class="mb-3" required>
                    </div>
                    <h6 class="my-1 position-relative">Share a Job Listing&nbsp;<span class="tool-tip"><i class="fa-regular fa-circle-question tool-tip-icon"></i><span class="tool-tip-text"> If your URL isn't accepted. Copy the listing as plain text!</span></span></h6>
                    <div id="listing-input" class=" d-flex flex-column align-items-start w-100 mb-2">
                        <div>From:&nbsp;
                            <label>URL <input type="radio" name="listing-type" value="url" checked onChange="listingInputChange(event)" class="listing-type"></label>
                            <label class="ms-2">Plain Text <input type="radio" name="listing-type" value="text" onChange="listingInputChange(event)" class="listing-type"></label>
                        </div>
                        <input name="input" placeholder="Paste Here" id="link-to-listing" class="form-control" onInput="listingInputChange(event)">
                    </div>
                    <div id="tone-input" class="d-flex flex-column align-items-start w-100 mb-2">
                            <label for="tone-select">Tone: </label>
                            <select class="mb-1" name="tone" id="tone-select">
                                <option value="passionate" selected>Passion</option>
                                <option value="humorous">Humor</option>
                                <option value="admiration">Admiration</option>
                                <option value="confident">Confidence</option>
                            </select>                       
                    </div>
                    <details class="w-100 text-start">
                        <summary class="mb-2">
                            <h6 class="my-1 d-inline">Additional Prompts</h6>
                        </summary>

                        
                        <div id="prompt-input" class=" d-flex flex-column align-items-start w-100 mb-3 position-relative">
                            <% prompt_verb = [
                                                    "coaching", "mentoring", "cooking", "gymnastics", "the Olympics",
                                                    "my last position", "teaching", "researching", "marketing", "programming",
                                                    "writing", "designing", "consulting", "engineering", "analyzing",
                                                    "managing", "developing", "training", "planning", "solving",
                                                    "leading", "organizing", "editing", "singing", "performing"
                                                ].sample %>
                            <% prompt_job = [
                                                "basketcall coach", "animator", "marketing associate", "partner",
                                                "brand ambassador", "ghost writer", "software developer", "graphic designer",
                                                "financial analyst", "project manager", "customer service representative",
                                                "data scientist", "human resources manager", "social media coordinator",
                                                "sales representative", "event planner", "content creator",
                                                "accountant", "public relations specialist", "web developer",
                                                "administrative assistant", "business analyst", "teacher assistant",
                                                "medical assistant", "photographer"
                                            ].sample %>
                            <% prompt_stem = [
                                                "Emphasize that", "Explain why", "Include how",
                                            ].sample %>
                            <% prompt_value = [
                                    "animal rights", "environmental awareness", "corporate efficiency", "maximizing profit",
                                    "social responsibility", "sustainability", "innovation", "diversity and inclusion",
                                    "customer satisfaction", "quality assurance", "ethical business practices", "community engagement",
                                    "team collaboration", "continuous improvement", "work-life balance", "transparency",
                                    "integrity", "equality", "health and wellness", "education",
                                    "caffeine addiction management", "procrastination enhancement", "couch potato empowerment"
                                ].sample %>

                            <textarea name="prompt"  maxlength="250"
                            id="express-prompt" class="position-relative form-control" rows="4" onInput="promptChange(event)"
                            placeholder="<%= "#{prompt_stem} my experience in #{prompt_verb} makes me an effective #{prompt_job}.\nThis company values #{prompt_value} and so do I." %>" 
                            ></textarea><div class="position-absolute char-counter w-100 text-end">0/250</div>
                        </div>
                    </details>


                    <span class="d-flex align-items-center"><input type="submit" value="Generate" id="express-submit" class="btn btn-success" disabled><span id="status" class="m-1"></span></span>
                </form>
            </div>
        </div>
        <div class="col-lg-2">
            <div class="gap-2 d-sm-flex justify-content-sm-center">
                <%= image_tag "letter.gif", id:"letter-gif", class:"w-75" %>
            </div>
        </div>
    </div>
</div>

<div id="resume-splash" style="background-color: #eef" class="px-4 py-5 mb-5 d-flex flex-column align-items-center">
    <h2 class="display-5 fw-bold mb-1 text-body-emphasis">Resume Builder <span class="fs-5 text-info">Beta</span></h2>
    <small>Instant Feedback!</small><br/>

    <div class="d-flex justify-content-center mt-2 w-100">
        <div class="col-lg-3 col-sm-1 d-flex flex-column align-items-start ps-5">
            <h3>Planned Features:</h3>
            <ul id="express-write-instructions" class="d-flex flex-column align-items-start ps-0">
                <li class="account-instruction express-instruction"> Upload your Resume</li>
                <li class="account-instruction express-instruction"> Get Instant Feedback</li>
                <li class="account-instruction express-instruction"> Generate bullet-point starters</li>
                <li class="account-instruction express-instruction"> Download as Word Document</li>
            </ul>
            <div class="gap-2 d-sm-flex justify-content-sm-center">
                <%= link_to "Check it Out", "/resumes/new", class: "btn btn-primary btn-lg px-4" %>
            </div>
        </div>
        <div class="col-lg-4 col-md-4">
            <img src="https://cl-helper-development.s3.amazonaws.com/resume-builder-hero.png" style="border-radius: 8px" width="100%">
        </div>
        <div class="col-lg-3 col-sm-12">
        </div>
    </div>
</div>

<div id="why" style="background-color: #eef" class="px-4 py-5 text-center">
    <h2 class="display-5 fw-bold mb-4 text-body-emphasis">Why Write a Cover Letter?</h2>
    <div class="d-flex justify-content-center">
        <div class="col-lg-4 col-md-4 d-flex flex-column align-items-start ps-5">
            <h3>It's essential for several reasons:</h3>
            <ul id="express-write-instructions" class="d-flex flex-column align-items-start ps-0">
                <li class="account-instruction express-instruction">Personalized Introduction</li>
                <li class="account-instruction express-instruction">Highlight Relevant Experiences</li>
                <li class="account-instruction express-instruction">Demonstrate Communication Skills</li>
                <li class="account-instruction express-instruction">Showcase Interest and Research</li>
            </ul>
        </div>
        <div class="col-lg-4 col-md-4 d-flex flex-column align-items-start ps-5">
            <div class="gap-2 d-sm-flex justify-content-sm-center">
                <%= link_to "Check it Out", "#t-height", class: "btn btn-primary btn-lg px-4" %>
            </div>
        </div>
    </div>
</div>