Docx::Document.from(a)
Docx::Document.from
Docx::Document.open(a)
a
a = request.body.to_io.read
b = a.read
a = request.body.to_io
b = a.read
a
a = request.body.to_io
request.body
exit
a.body
a.read
a.to_s
a
a = request.body.to_io
request.body.to_io.read
request.body.to_io
request.body.to_io.read
PDF::Reader.open(request.body.to_io){|reader| puts reader.pages}
PDF::Reader.open(pdf.to_io){|reader| puts reader.pages}
request.body.to_io.read
request.body.to_io
request.body
exit
request.body.to_a
request.body.to_i
request.body.to_s
request.body.to_h
request.body["file"]
request.body
request.body.partition.each{|p| puts p }
request.body.partition
request.body.pretty_print
request.body.methods
request.body.tempfile
request.body.to_io
request.body
payload
n
s
n
request.body.read
request.read
n
request.body
params
exit
PDF::Reader.open(pdf.to_io){|reader| puts reader.pages}
PDF::Reader.open(pdf.to_io) do |reader|
PDF::Reader.open(pdf.to_io)
pdf
PDF::Reader
n
s
n
s
payload.to_io
payload
payload.to_io.read
payload.to_io
payload
n
request.params
n
request.body
exit
Docx::Document.open(payload.to_io)
payload.to_io
payload.tempfile
payload.read
payload
Docx::Document.open(payload)
n
payload
n
exit
payload
n
payload
n
c
request.body.to_io.read
request.body.to_io
request.body.to_s
request.body
Docx::Document.open(request.body)
Docx::Document.open(request.body.read)
request.params
request.body.file
request.body
request.body.to_s
request.body
Docx::Document.open(request.body.to_s)
Docx::Document.open(request.body)
Docx::Document
request.body
request.stream
request.steram
response
request
c
response.body
resposne.body
response
response.stream.read
response.stream
response
respone
Docx::Document.open(a)
Docx::Document.open("/")
Docx::Document.open("")
Docx::Document.open()
Docx::Document.open(a)
a
a.raw
a.to_s
a.methods
a.tempfile
a.class
Docx::Document.open(a)
Docx::Document
Docx
a
a = request.body.to_io
c
request.body.methods
request.body.read
request.body.to_json
request.body.print
request.body.length
request.body.read_lines
request.body.ioflush
request.body.raw
request.body.methods
request.body
a = request.body.tempfile
a = request.body.temptfile
request.body
params.body
params["file"]
params[:file]
c
n
s
n
c
n
c
request.body.read
request.body
Docx::Document.open(request.body.read)
Docx::Document.open(request.body)
request.body
c
request.body.methods
request.body.used?
request.body.closed?
request.body.read
request.body
Docx::Document.open(request.body)
Docx::Document.open()
Docx
c
n
docx
n
s
n
c
n
docx
n
s
n
params
c
payload
n
c
params
exit
n
c
payload
n
payload
n
url
n
c
n
params["link"]
n
params
exit
a.include?(4 || 3)
a.include?(2 || 3)
a.include?(2, 3)
a.include?(2)
a = [1,2,3]
params["link"]
params["text"]
url
n
c
n
params
c
n
params
c
n
PDF::Reader.open(request.body)
c
PDF::Reader.open(request.body)
exit
PDF::Reader.open(request.body)
PDF::Reader.open(pdf)
PDF::Reader.open
PDF::Reader
params
request.body
c
request.body.open
request.body.closed?
request.body.close
request.body.closed?
request.body.methods
request.body.pread
request.body.read?
request.body.fresh?
request.body
request.body.open
request.body.read
request.body
Docx::Document.open(request.body)
DOCX
request.body
params
c
params
c
request.params
request
params
request.body
params
c
params["link"]
params
payload
c
text
c
